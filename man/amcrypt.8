.\"     Title: amcrypt
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.72.0 <http://docbook.sf.net/>
.\"      Date: 02/07/2007
.\"    Manual: 
.\"    Source: 
.\"
.TH "AMCRYPT" "8" "02/07/2007" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
amcrypt \- reference crypt program for Amanda symmetric data encryption
.SH "SYNOPSIS"
.HP 8
\fBamcrypt\fR
.SH "DESCRIPTION"
.PP

\fBamcrypt\fR
requires
\fBaespipe\fR,
\fBuuencode\fR
and
\fBgpg\fR
to work. Aespipe is available from
\fI\%http://loop\-aes.sourceforge.net\fR
.PP

\fBamcrypt\fR
will search for the aespipe program in the following directories: /usr/bin:/usr/local/bin:/sbin:/usr/sbin.
.PP

\fBamcrypt\fR
calls
\fBamaespipe\fR
and pass the
\fBpassphrase\fR
through file descriptor 3. The passphrase should be stored in ~amanda/.am_passphrase.
.SH "HOW TO CREATE ENCRYPTION KEYS FOR AMCRYPT"
.PP
1. Create 65 random encryption keys and encrypt those keys using gpg. Reading from /dev/random may take indefinitely long if kernel's random entropy pool is empty. If that happens, do some other work on some other console (use keyboard, mouse and disks).
.PP
head \-c 2925 /dev/random | uuencode \-m \- | head \-n 66 | tail \-n 65 \e | gpg \-\-symmetric \-a > ~amanda/.gnupg/am_key.gpg
.PP
This will ask for a passphrase. Remember this passphrase as you will need it in the next step.
.PP
2. Store the passphrase inside the home\-directory of the AMANDA\-user and protect it with proper permissions:
.sp
.RS 4
.nf
echo my_secret_passphrase > ~amanda/.am_passphrase
chown amanda:disk ~amanda/.am_passphrase
chmod 700 ~amanda/.am_passphrase
.fi
.RE
.SH "KEY AND PASSPHRASE"
.PP

\fBamcrypt\fR
uses the same key to encrypt and decrypt data.
.PP
It is very important to store and protect the key and the passphrase properly. Encrypted backup data can
\fBonly\fR
be recovered with the correct key and passphrase.
.SH "SEE ALSO"
.PP
\fBamanda\fR(8),
\fBamanda.conf\fR(5),
\fBaespipe\fR(1),
\fBamaespipe\fR(8),
\fBgpg\fR(1)
