'\" t
.\"     Title: amfetchdump
.\"    Author: John Stange <building@nap.edu>
.\" Generator: DocBook XSL Stylesheets vsnapshot_8273 <http://docbook.sf.net/>
.\"      Date: 11/05/2009
.\"    Manual: System Administration Commands
.\"    Source: Amanda 2.6.1p2
.\"  Language: English
.\"
.TH "AMFETCHDUMP" "8" "11/05/2009" "Amanda 2\&.6\&.1p2" "System Administration Commands"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
amfetchdump \- extract backup images from multiple \fIAmanda\fR tapes\&.
.SH "SYNOPSIS"
.HP \w'\fBamfetchdump\fR\ 'u
\fBamfetchdump\fR [\-pcClawns] [\-d\ \fIdevice\fR] [\-O\ \fIdirectory\fR] [\-b\ \fIblocksize\fR] \fIconfig\fR \fIhostname\fR [\fIdisk\fR\ [\ \fIdate\fR\ [\ \fIlevel\fR\ [\ \fIhostname\fR\ [\&.\&.\&.]\ ]\ ]\ ]] [\-o\ \fIconfigoption\fR]...
.SH "DESCRIPTION"
.PP
\fBAmfetchdump\fR
pulls one or more matching dumps from tape or from the holding disk, handling the reassembly of multi\-tape split dump files as well as any tape autochanger operations\&.
.PP
It will automatically use the logs created by
\fBamdump\fR(8)
to locate available dumps on tape, in the same way that the
\fBfind\fR
feature of
\fBamadmin\fR(8)
lists available dumps\&. If these logs are unavailable, it can search tape\-by\-tape to find what it needs, and can generate new logs to serve as an emergency tape inventory\&.
.PP
The
\fIhostname\fR,
\fIdiskname\fR,
\fIdatestamp\fR, and
\fIlevel\fR
dump pattern\-matching works as in
\fBamrestore\fR(8), with the added requirement that at minimum a
\fIhostname\fR
must be specified when not in inventory mode\&.
.PP
Unless
\fB\-p\fR
is used, backup images are extracted to files in the current directory named:
.PP
\fIhostname\&.diskname\&.datestamp\&.dumplevel\fR
.SH "OPTIONS"
.PP
\fB\-p\fR
.RS 4
Pipe exactly one complete dump file to
\fIstdout\fR, instead of writing the file to disk\&. This will restore only the first matching dumpfile (where "first" is determined by the dump log search facility)\&.
.RE
.PP
\fB\-d\fR \fIdevice\fR
.RS 4
Restore from this tape device instead of the default\&.
.RE
.PP
\fB\-O\fR \fIdirectory\fR
.RS 4
Output restored files to this directory, instead of to the current working directory\&.
.RE
.PP
\fB\-c\fR
.RS 4
Compress output, fastest method available\&.
.RE
.PP
\fB\-C\fR
.RS 4
Compress output, smallest file size method available\&.
.RE
.PP
\fB\-l\fR
.RS 4
Leave dumps in the compressed/uncompressed state in which they were found on tape\&. By default,
\fBamfetchdump\fR
will automatically uncompress when restoring\&.
.RE
.PP
\fB\-a\fR
.RS 4
Assume that all tapes are already available, via tape changer or otherwise, instead of prompting the operator to ensure that all tapes are loaded\&.
.RE
.PP
\fB\-w\fR
.RS 4
Wait to put split dumps together until all chunks have been restored\&. Normally,
\fBamfetchdump\fR
will attempt to read pieces of a split file from tape in order, so that it can assemble them simply by appending each file to the first\&. This option disables the appending behavior, and instead restores each piece as an individual file and reassembles them only after all have been restored\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
This requires at least double the size of your dump in free disk space, in order to build the final assembled dumpfile\&.
.sp .5v
.RE
This behavior is implicitly invoked in circumstances where knowing the location of all dumps on tape in advance is not possible, such as when you are restoring without log files\&.
.RE
.PP
\fB\-n\fR
.RS 4
Do not reassemble split dump files at all, just restore each piece as an individual file\&.
.RE
.PP
\fB\-s\fR
.RS 4
Do not fast\-forward straight to needed files on tape\&. This will slow down most restores substantially\&. Only use this option if your tape drive does not properly support the fast\-forward operation\&.
.RE
.PP
\fB\-b\fR \fIblocksize\fR
.RS 4
Force a particular block size when reading from tapes\&. This value will usually be autodetected, and should not normally need to be set\&.
.RE
.PP
\fB\-o\fR \fIconfigoption\fR
.RS 4
See the "\fBCONFIGURATION OVERRIDE\fR" section in
\fBamanda\fR(8)\&.
.RE
.SH "EXAMPLES"
.PP
All the examples here assume your configuration is called
\fISetA\fR\&.
.PP
Here\'s a simple case, restoring all known dumps of the host vanya to the current working directory\&.
.nf
$ amfetchdump SetA vanya
.fi
.PP
A more likely scenario involves restoring a particular dump from a particular date\&. We\'ll pipe this one to
\fBGNU\-tar\fR
as well, to automatically extract the dump\&.
.nf
$ amfetchdump \-p SetA vanya /home 20051020 | gtar \-xvpf \-
.fi
.SH "CAVEATS"
.PP
\fBAmfetchdump\fR
is dependent on accessing your server\'s config, tape changer, and (normally) dump logs\&. As such, it\'s not necessarily the most useful tool when those have all been wiped out and you desperately need to pull things from your tape\&. Pains have been taken to make it as capable as possible, but for seriously minimialist restores, look to
\fBamrestore\fR(8)
or
\fBdd\fR(8)
instead\&.
.SH "SEE ALSO"
.PP
\fBamanda\fR(8),
\fBamadmin\fR(8),
\fBamrestore\fR(8),
\fBtar\fR(1),
\fBrestore\fR(8),
: http://wiki.zmanda.com
.SH "AUTHORS"
.PP
\fBJohn Stange\fR <\&building@nap\&.edu\&>
.RS 4
National Academies Press
.RE
.PP
\fBIan Turner\fR <\&ian@zmanda\&.com\&>
.RS 4
Zmanda, Inc\&. (http://www\&.zmanda\&.com)
.RE
