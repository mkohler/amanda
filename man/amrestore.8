.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "AMRESTORE" 8 "" "" ""
.SH NAME
amrestore \- extract backup images from an AMANDA tape
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 10
\fBamrestore\fR [\fB\-r\fR | \fB\-c\fR | \fB\-C\fR] [\-b\ \fIblocksize\fR] [\-f\ \fIfileno\fR] [\-l\ \fIlabel\fR] [\-p] [\-h] \fB\fItapedevice\fR\fR | \fB\fIholdingfile\fR\fR | \fB\fIhostname\fR\ [\fIdiskname\fR\ [\fIdatestamp\fR\ [\fIhostname\fR\ [\fIdiskname\fR\ [\fIdatestamp\fR...]]]]]\fR 
.ad
.hy

.SH "DESCRIPTION"

.PP
\fBAmrestore\fR extracts backup images from the tape mounted on \fBtapedevice\fR or from the holding disk file \fBholdingfile\fR that match \fBhostname\fR, \fBdiskname\fR and \fBdatestamp\fR patterns given on the command line\&. The tape or holding file must be in a format written by the \fBamdump\fR or \fBamflush\fR program\&.

.PP
If \fBdiskname\fR is not specified, all backups on the tape for the previous \fBhostname\fR are candidates\&. If \fBdatestamp\fR is not specified, all backups on the tape for the previous \fBhostname\fR and \fBdiskname\fR are candidates\&. If no \fBhostname\fR, \fBdiskname\fR or \fBdatestamp\fR are specified, every backup on the tape is a candidate\&.

.PP
\fBHostname\fR and \fBdiskname\fR are special expressions described in the "HOST & DISK EXPRESSION" section of \fBamanda\fR(8)\&. \fBDatestamp\fR are special expression described in the "DATESTAMP EXPRESSION" section of \fBamanda\fR(8)\&. For example, if \fBdiskname\fR is "rz[23]a", it would match disks \fBrz2a\fR and \fBrz3a\fR\&.

.PP
\fBDatestamp\fR is useful if \fBamflush\fR writes multiple backup runs to a single tape\&.

.PP
Unless \fB\-p\fR is used, candidate backup images are extracted to files in the current directory named:

.PP
\fBhostname\&.diskname\&.datestamp\&.dumplevel\fR

.PP
Amrestore doesn't use a changer, it restore from the tape already loaded in the \fBtapedevice\&.\fR

.SH "OPTIONS"

.TP
\fB\-b\fR
Set the blocksize used to read the tape or holding file\&. All holding files must be read with a blocksize of 32 KBytes\&. \fBAmrestore\fR should normally be able to determine the blocksize for tapes on its own and not need this parameter\&.

.PP
The default is 32 KBytes\&.

.TP
\fB\-f\fR
Do a rewind followed by a fsf <fileno> before trying to restore an image\&.

.TP
\fB\-l\fR
Check if we restoring from the tape with the right \fBlabel\fR

.TP
\fB\-p\fR
Pipe output\&. The first matching backup image is sent to standard output, which is normally a pipe to \fBrestore\fR or \fBtar\fR, then \fBamrestore\fR quits\&. It may be run again to continue selecting backups to process\&. Make sure you specify the no\-rewind \fBtapedevice\fR when doing this\&.

.PP
Note: \fBrestore\fR may report "short read" errors when reading from a pipe\&. Most versions of \fBrestore\fR support a blocking factor option to let you set the read block size, and you should set it to 2\&. See the example below\&.

.TP
\fB\-c\fR
Compress output using the fastest method the compression program provides\&. \fBAmrestore\fR normally writes output files in a format understood by \fBrestore\fR or \fBtar\fR, even if the backups on the tape are compressed\&. With the \fB\-c\fR or \fB\-C\fR option, \fBamrestore\fR writes all files in compressed format, even if the backups on the tape are not compressed\&. Output file names will have a \&.Z or \&.gz extension depending on whether \fBcompress\fR or \fBgzip\fR is the preferred compression program\&. This option is useful when the current directory disk is small\&.

.TP
\fB\-C\fR
Compress output using the best method the compression program provides (may be very CPU intensive)\&. See the notes above about the \fB\-c\fR option\&.

.TP
\fB\-r\fR
Raw output\&. Backup images are output exactly as they are on the tape, including the \fBamdump\fR headers\&. Output file names will have a \&.RAW extension\&. This option is only useful for debugging and other strange circumstances\&.

.TP
\fB\-h\fR
Header output\&. The tape header block is output at the beginning of each file\&. This is like \fB\-r\fR except \fB\-c\fR or \fB\-C\fR may also be used to compress the result\&. \fBAmrecover\fR uses the header to determine the restore program to use\&.

.PP
If a header is written (\-r or \-h), only 32 KBytes are output regardless of the tape blocksize\&. This makes the resulting image usable as a holding file\&.

.SH "EXAMPLES"

.PP
The following does an interactive restore of disk \fBrz3g\fR from host \fBseine\fR, to restore particular files\&. Note the use of the \fBb\fR option to \fBrestore\fR, which causes it to read in units of two 512\-byte blocks (1 Kbyte) at a time\&. This helps keep it from complaining about short reads\&.

.nf

% amrestore \-p /dev/nrmt9 seine rz3g | restore \-ivbf 2 \-

.fi

.PP
The next example extracts all backup images for host \fBseine\fR\&. This is the usual way to extract all data for a host after a disk crash\&.

.nf

% amrestore /dev/nrmt9 seine

.fi

.PP
If the backup datestamp in the above example is 19910125 and \fBseine\fR has level 0 backups of disks \fBrz1a\fR and \fBrz1g\fR on the tape, these files will be created in the current directory:

.nf

seine\&.rz1a\&.19910125\&.0
seine\&.rz1g\&.19910125\&.0

.fi

.PP
You may also use \fBamrestore\fR to extract a backup image from a holding disk file that has not yet been flushed to tape:

.nf

% amrestore \-p /amanda/20001119/seine\&.rz1a\&.2 | restore \-ivbf 2 \-

.fi

.PP
\fBAmrestore\fR may be used to generate a listing of images on a tape:

.nf

% mt \-f /dev/nrmt9 rewind
% amrestore \-p /dev/nrmt9 no\-such\-host > /dev/null

.fi

.PP
This asks \fBamrestore\fR to find images for host \fBno\-such\-host\fR\&. It will not find any entries that match, but along the way will report each image it skips\&.

.SH "CAVEATS"

.PP
\fBGNU\-tar\fR must be used to restore files from backup images created with the GNUTAR dumptype\&. Vendor tar programs sometimes fail to read GNU tar images\&.

.SH "AUTHOR"

.PP
James da Silva, <jds@amanda\&.org>, University of Maryland, College Park: Original text

.PP
Stefan G\&. Weichinger, <sgw@amanda\&.org>, maintainer of the \fBAMANDA\fR\-documentation: XML\-conversion

.SH "SEE ALSO"

.PP
\fBamanda\fR(8), \fBamdump\fR(8), \fBamflush\fR(8), \fBtar\fR(1)  \fBrestore\fR(8)

